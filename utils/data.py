import numpy as np


def create_data_dict(data_file):
    with open(data_file) as file:
        lines = [line.rstrip(';\r\n') for line in file]

    data_list = map(lambda x: x.split(';'), lines)
    data_dict = {}

    for data in data_list:
        data_dict[data[0]] = map(int, data[1:])

    return data_dict


def count_antivirus_engines(engine_file):
    count = 0

    with open(engine_file) as engines:
        for line in engines:
            if line.strip():
                count += 1

    return count


def get_malware_proportions(result_values):
    return result_values.count(0), result_values.count(1)


def annotator_model(engine_count, data_dict, type_dict):
    sensitivity = np.zeros(engine_count)
    specificity = np.zeros(engine_count)
    malware_count = 0
    goodware_count = 0

    for k, v in data_dict.iteritems():
        for i in range(engine_count):
            sensitivity[i] += 1 if v[i] == 1 and type_dict[k] == 1 else 0
            specificity[i] += 1 if v[i] == 0 and type_dict[k] == 0 else 0

        if type_dict[k] == 1:
            malware_count += 1
        else:
            goodware_count += 1

    sensitivity /= malware_count
    specificity /= goodware_count

    return sensitivity, specificity


def correct_count(results, type_dict):
    return sum([1 if results[result] == type_dict[result] else 0 for result in results])


def get_ransomware_data():
    return get_data(
        'datasets/ransomware/AVnames.txt',
        'datasets/ransomware/matrix-antivirus-ransomware.txt',
        'datasets/ransomware/matrix-antivirus-goodware.txt'
    )


def get_old_large_data():
    return get_data(
        'datasets/old_large/engines.txt',
        'datasets/old_large/matrix-antivirus-malware.txt',
        'datasets/old_large/matrix-antivirus-goodware.txt'
    )

def get_new_large_data():
    return get_data(
        'datasets/new_large/engines.txt',
        'datasets/new_large/matrix-antivirus-malware.txt',
        'datasets/new_large/matrix-antivirus-goodware.txt'
    )


def get_data(engine_file, malware_file, goodware_file):
    engine_count = count_antivirus_engines(engine_file)
    ransomware_dict = create_data_dict(malware_file)
    goodware_dict = create_data_dict(goodware_file)

    data_dict = dict(ransomware_dict.items() + goodware_dict.items())

    type_dict = dict([(key, 1) for key in ransomware_dict] + [(key, 0) for key in goodware_dict])

    return engine_count, data_dict, type_dict

