import couchdb
import sys

from utils import model


def get_engines(db):
    engines = set()

    for report in db:
        file_report = model.FileReport.load(db, report)
        for engine in file_report.scans:
            engines.add(engine)

    return engines


def get_reports(db, combined_engines, uncombined_engines):
    combined_reports = []
    uncombined_reports = []

    for report in db:
        if report == '_design/views':
            continue
        file_report = model.FileReport.load(db, report)
        combined_reports.append(transform_report(file_report, combined_engines))
        uncombined_reports.append(transform_report(file_report, uncombined_engines))

    return combined_reports, uncombined_reports


def transform_report(report, engines):
    line = report.sha1 + ';'

    for engine in engines:
        av = report.scans.get(engine, 2)
        if av != 2:
            av = 1 if av['detected'] else 0

        line += str(av) + ';'

    return line


def output(iterable, output_file):
    with open(output_file, 'w') as output:
        for item in iterable:
            output.write(item + '\n')



if __name__ == '__main__':
    args = sys.argv[1:]

    if len(args) != 1:
        print "Usage: transformer <goodware_engines_file>"
        sys.exit(2)

    goodware_engines_file = args[0]

    with open(goodware_engines_file) as goodware_engines:
        engines_goodware_old = [engine for engine in goodware_engines]

    server = couchdb.Server()

    malware_db_old = server['malware']
    malware_db_new = server['malware2']

    goodware_db_new = server['goodware2']

    engines_malware_old = get_engines(malware_db_old)
    engines_malware_new = get_engines(malware_db_new)
    engines_goodware_new = get_engines(goodware_db_new)

    engines = set(engines_malware_old | engines_malware_new | engines_goodware_old | engines_goodware_new)
    output(engines, 'transformer/combined/engines.txt')

    reports_malware_old_combined, reports_malware_old_uncombined = get_reports(malware_db_old, engines, engines_malware_old)
    output(reports_malware_old_combined, 'tranformer/combined/reports_malware_old.txt')
    output(reports_malware_old_uncombined, 'tranformer/uncombined/reports_malware_old.txt')

    reports_malware_new_combined, reports_malware_new_uncombined = get_reports(malware_db_new, engines, engines_malware_new)
    output(reports_malware_old_combined, 'tranformer/combined/reports_malware_new.txt')
    output(reports_malware_new_uncombined, 'tranformer/uncombined/reports_malware_new.txt')

    reports_goodware_new_combined, reports_goodware_new_uncombined = get_reports(goodware_db_new, engines, engines_goodware_new)
    output(reports_goodware_new_combined, 'tranformer/combined/reports_goodware_new.txt')
    output(reports_goodware_new_uncombined, 'tranformer/uncombined/reports_goodware_new.txt')

