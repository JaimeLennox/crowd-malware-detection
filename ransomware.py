import numpy as np
import matplotlib.pyplot as plt


def create_data_dict(data_file):
    with open(data_file) as file:
        lines = [line.rstrip(';\r\n') for line in file]

    data_list = map(lambda x: x.split(';'), lines)
    data_dict = {}

    for data in data_list:
        data_dict[data[0]] = map(int, data[1:])

    return data_dict


# returns a dict of hash to vote (0 for goodware,1 for malware)
def threshold(ransomware_dict, malware_threshold):
    results = {}

    for hash in ransomware_dict:
        report = ransomware_dict[hash]

        if report.count(1) >= malware_threshold:
            results[hash] = 1
        else:
            results[hash] = 0

    return results


def majority_vote(ransomware_dict, no_antivirus_engines):
    return threshold(ransomware_dict, no_antivirus_engines)


def count_antivirus_engines(engine_file):
    count = 0

    with open(engine_file) as engines:
        for line in engines:
            if line.strip():
                count += 1

    return count

def get_malware_proportions(result_values):
    return result_values.count(0), result_values.count(1)

if __name__ == "__main__":
    engine_count = count_antivirus_engines('ransomware/AVnames.txt')

    ransomware_dict = create_data_dict('ransomware/matrix-antivirus-ransomware.txt')
    goodware_dict = create_data_dict('ransomware/matrix-antivirus-goodware.txt')

    malware_threshold = 5

    ransomware_results = threshold(ransomware_dict, malware_threshold)
    goodware_results = threshold(goodware_dict, malware_threshold)

    ransomware_zeroes, ransomware_ones = get_malware_proportions(ransomware_results.values())
    goodware_zeroes, goodware_ones = get_malware_proportions(goodware_results.values())

    fig = plt.figure()

    width = 0.8
    ind = np.arange(2)
    plt.xticks(ind + width / 2, ['goodware', 'malware'])

    plt.bar(ind, [ransomware_zeroes, ransomware_ones])
    plt.show()

    plt.xticks(ind + width / 2, ['goodware', 'malware'])
    plt.bar(ind, [goodware_zeroes, goodware_ones])
    plt.show()

