import couchdb
import model


def get_engines(dbs):
    engines = set()
    count = 0

    for db in dbs:
        for report in db:
            file_report = model.FileReport.load(db, report)
            for engine in file_report.scans:
                engines.add(engine)

            count += 1

            # should have gathered all engines by now
            if count == 1000:
                break

    return engines


def get_reports(db, engines):
    reports = []

    for report in db:
        if report == '_design/views':
            continue
        file_report = model.FileReport.load(db, report)
        reports.append(transform_report(file_report, engines))

    return reports


def transform_report(report, engines):
    line = report.sha1 + ';'

    for engine in engines:
        av = report.scans.get(engine, 2)
        if av != 2:
            av = 1 if av['detected'] else 0

        line += str(av) + ';'

    return line


if __name__ == '__main__':
    server = couchdb.Server()

    malware_db_old = server['malware']
    malware_db_new = server['malware2']

    goodware_db_old = server['goodware']
    goodware_db_new = server['goodware2']

    dbs = [malware_db_old, malware_db_new, goodware_db_old, goodware_db_new]

    engines = get_engines(dbs)
    print engines

    with open('transformer/engines.txt', 'w') as engines_file:
        for engine in engines:
            engines_file.write(engine + '\n')

    reports_malware_old = get_reports(malware_db_old, engines)

    with open('transformer/reports_malware_old.txt', 'w') as reports_file:
        for report in reports_malware_old:
            reports_file.write(report + '\n')

    reports_malware_new = get_reports(malware_db_new, engines)

    with open('transformer/reports_malware_new.txt', 'w') as reports_file:
        for report in reports_malware_new:
            reports_file.write(report + '\n')

    reports_goodware_old = get_reports(goodware_db_old, engines)

    with open('transformer/reports_goodware_old.txt', 'w') as reports_file:
        for report in reports_goodware_old:
            reports_file.write(report + '\n')

    reports_goodware_new = get_reports(goodware_db_new, engines)

    with open('transformer/reports_goodware_new.txt', 'w') as reports_file:
        for report in reports_goodware_new:
            reports_file.write(report + '\n')

